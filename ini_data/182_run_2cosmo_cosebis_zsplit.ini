[DEFAULT]
MY_PATH      = /net/home/fohlen13/stoelzner/

stats_name   = cosebis
CSL_PATH     = %(MY_PATH)s/cosmosis-standard-library/
KCAP_PATH    = %(MY_PATH)s/kcap/
RESULTS_PATH = %(MY_PATH)s/KiDS-1000/
COSEBIS_PATH = %(KCAP_PATH)s/cosebis/

OUTPUT_FOLDER = %(RESULTS_PATH)s/chains/COSEBIs_2cosmos/
INPUT_FOLDER  = %(MY_PATH)s/Cat_to_Obs_K1000_P1/data/kids/
CONFIG_FOLDER = %(RESULTS_PATH)s/config/
ADDITIONAL_MODULES_PATH = %(MY_PATH)s/KiDS-1000/modules/

blind         = C
name_tag      = with_m_bias
cat_version   = V1.0.0A_ugriZYJHKs_photoz_SG_mask_LF_svn_309c_2Dbins_v2_goldclasses_Flag_SOM_Fid
redshift_name = source

SAMPLER_NAME = polychord
RUN_NAME = %(SAMPLER_NAME)s_%(blind)s

data_file = %(INPUT_FOLDER)s/fits_iterative_covariance/%(stats_name)s_KIDS1000_Blind%(blind)s_%(name_tag)s_%(cat_version)s.fits

WnLogPath = %(RESULTS_PATH)s/WnLog/

;COSEBIs settings
tmin_cosebis = 0.50
tmax_cosebis = 300.00
nmax_cosebis = 5

[pipeline]
modules = select_parameter_set_1 sample_S8 sigma8toAs correlated_dz_priors one_parameter_hmcode load_nz_fits cosmopower distances extrapolate_power source_photoz_bias linear_alignment projection cosebis scale_cuts_1 delete select_parameter_set_2 sample_S8 sigma8toAs one_parameter_hmcode cosmopower distances extrapolate_power linear_alignment projection cosebis scale_cuts_2 scale_cuts_uncut combine_theoryvectors likelihood
values  = %(CONFIG_FOLDER)s/values_2cosmo.ini
priors  = %(CONFIG_FOLDER)s/priors.ini
likelihoods  = loglike
; extra_output = cosmological_parameters/S_8 cosmological_parameters/sigma_8 cosmological_parameters/A_s cosmological_parameters/omega_m cosmological_parameters/omega_nu cosmological_parameters/omega_lambda cosmological_parameters/cosmomc_theta nofz_shifts/bias_1 nofz_shifts/bias_2 nofz_shifts/bias_3 nofz_shifts/bias_4 nofz_shifts/bias_5 delta_z_out/bin_1 delta_z_out/bin_2 delta_z_out/bin_3 delta_z_out/bin_4 delta_z_out/bin_5  
;extra_output = scale_cuts_output/theory#120
quiet = T
timing = F
debug = F

[polychord]
live_points = 475
tolerance = 0.001
resume = T
base_dir = %(OUTPUT_FOLDER)s/PC
polychord_outfile_root = pc_run

[delete]
file = %(CSL_PATH)s/utility/delete/delete_section.py
sections = distances intrinsic_power matter_intrinsic_power matter_power_lin matter_power_nl intrinsic_alignment_parameters cosebis cosmological_parameters halo_model_parameters recfast

[select_parameter_set_1]
file = %(ADDITIONAL_MODULES_PATH)s/select_parameter_set.py
input_set = 1

[select_parameter_set_2]
file = %(ADDITIONAL_MODULES_PATH)s/select_parameter_set.py
input_set = 2

[runtime]
sampler = %(SAMPLER_NAME)s

[output]
filename = %(OUTPUT_FOLDER)s/output_%(RUN_NAME)s.txt
format = text

[test]
save_dir=%(OUTPUT_FOLDER)s/output_%(RUN_NAME)s
fatal_errors=T

[maxlike]
method = Nelder-Mead
tolerance = 0.01
maxiter = 1000000
max_posterior = T

[multinest]
max_iterations=100000
multinest_outfile_root= %(OUTPUT_FOLDER)s/%(RUN_NAME)s_
resume=T
tolerance = 0.01
constant_efficiency = F
live_points = 1000
efficiency = 0.3

[sample_S8]
file = %(KCAP_PATH)s/utils/sample_S8.py
s8_name = s_8_input

[sigma8toAs]
file = %(KCAP_PATH)s/utils/sigma8toAs.py

[correlated_dz_priors]
file = %(KCAP_PATH)s/utils/correlated_priors.py
uncorrelated_parameters = nofz_shifts/uncorr_bias_1 nofz_shifts/uncorr_bias_2 nofz_shifts/uncorr_bias_3 nofz_shifts/uncorr_bias_4 nofz_shifts/uncorr_bias_5
output_parameters = nofz_shifts/bias_1 nofz_shifts/bias_2 nofz_shifts/bias_3 nofz_shifts/bias_4 nofz_shifts/bias_5
covariance = %(INPUT_FOLDER)s/nofz/SOM_cov_multiplied.asc

[one_parameter_hmcode]
file = %(KCAP_PATH)s/utils/one_parameter_hmcode.py
a_0 = 0.98
a_1 = -0.12

[camb]
file = %(CSL_PATH)s/boltzmann/camb/camb_interface.py
do_reionization = F
mode = power
nonlinear = pk
halofit_version = mead
neutrino_hierarchy = normal
kmax = 20.0
zmid = 2.0
nz_mid = 100
zmax = 6.0
nz = 150
; changed from background_zmin etc
zmax_background = 6.0
zmin_background = 0.0
nz_background = 6000

[extrapolate_power]
file = %(CSL_PATH)s/boltzmann/extrapolate/extrapolate_power.py
kmax = 500.0

[load_nz_fits]
file = %(CSL_PATH)s/number_density/load_nz_fits/load_nz_fits.py
nz_file = %(data_file)s
data_sets = %(redshift_name)s

[source_photoz_bias]
file = %(CSL_PATH)s/number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_%(redshift_name)s
bias_section  = nofz_shifts
interpolation = cubic
output_deltaz = T
output_section_name = delta_z_out

[linear_alignment]
file = %(CSL_PATH)s/intrinsic_alignments/la_model/linear_alignments_interface.py
method = bk_corrected

[projection]
file = %(CSL_PATH)s/structure/projection/project_2d.py
# changed from ell_min to ell_min_logspaced
ell_min_logspaced = 1.0
ell_max_logspaced = 1.0e4
n_ell_logspaced = 50
position-shear = F
fast-shear-shear-ia = %(redshift_name)s-%(redshift_name)s 
verbose = F
get_kernel_peaks = F

[cosebis]
file = %(COSEBIs_PATH)s/libcosebis.so
theta_min = %(tmin_cosebis)s
theta_max = %(tmax_cosebis)s
n_max = %(nmax_cosebis)s
Roots_n_Norms_FolderName = %(COSEBIS_PATH)s/TLogsRootsAndNorms/
Wn_Output_FolderName = %(WnLogPath)s
Tn_Output_FolderName = %(COSEBIS_PATH)s/TpnLog/
output_section_name =  cosebis
add_2D_cterm = 0 ; (optional) DEFAULT is 0: don't add it
; input_2Dcterm_filename = %(inputEn2D_filename)s ; (optional) to add 2D c-term
; input_2D_section_name = cosebis_2D ; (optional) where to look in the block for cosebis_2D, 
; it has to be the same format as other cosmosis outputs

[scale_cuts_uncut]
file = %(KCAP_PATH)s/modules/scale_cuts/scale_cuts.py
output_section_name = scale_cuts_output_uncut
data_and_covariance_fits_filename = %(data_file)s
use_stats = En
keep_ang_peee = 100 1500
keep_ang_En   = 0.5 5.5 
keep_ang_xiP  = 0.5 300.0 ; 75.0 if no delta_c
keep_ang_xiM  = 4.0 300.0
xi_plus_extension_name = xiP
xi_minus_extension_name = xiM
bandpower_ggl_extension_name = PneE
bandpower_e_cosmic_shear_extension_name = PeeE
cosebis_extension_name = En
xi_plus_section_name = shear_xi_plus_binned
xi_minus_section_name = shear_xi_minus_binned
bandpower_ggl_section_name = bandpower_galaxy_shear
bandpower_e_cosmic_shear_section_name = bandpower_shear_e
cosebis_section_name = cosebis
simulate = F
simulate_with_noise = T
mock_filename = 

[scale_cuts_1]
file = %(KCAP_PATH)s/modules/scale_cuts/scale_cuts.py
output_section_name = scale_cuts_output_1
data_and_covariance_fits_filename = %(data_file)s
use_stats = En
keep_ang_peee = 100 1500
keep_ang_En   = 0.5 5.5 
keep_ang_xiP  = 0.5 300.0 ; 75.0 if no delta_c
keep_ang_xiM  = 4.0 300.0
cut_pair_En = @BINSTRINGONE@
xi_plus_extension_name = xiP
xi_minus_extension_name = xiM
bandpower_ggl_extension_name = PneE
bandpower_e_cosmic_shear_extension_name = PeeE
cosebis_extension_name = En
xi_plus_section_name = shear_xi_plus_binned
xi_minus_section_name = shear_xi_minus_binned
bandpower_ggl_section_name = bandpower_galaxy_shear
bandpower_e_cosmic_shear_section_name = bandpower_shear_e
cosebis_section_name = cosebis
simulate = F
simulate_with_noise = T
mock_filename = 

[scale_cuts_2]
file = %(KCAP_PATH)s/modules/scale_cuts/scale_cuts.py
output_section_name = scale_cuts_output_2
data_and_covariance_fits_filename = %(data_file)s
use_stats = En
keep_ang_peee = 100 1500
keep_ang_En   = 0.5 5.5 
keep_ang_xiP  = 0.5 300.0 ; 75.0 if no delta_c
keep_ang_xiM  = 4.0 300.0
cut_pair_En = @BINSTRINGTWO@
xi_plus_extension_name = xiP
xi_minus_extension_name = xiM
bandpower_ggl_extension_name = PneE
bandpower_e_cosmic_shear_extension_name = PeeE
cosebis_extension_name = En
xi_plus_section_name = shear_xi_plus_binned
xi_minus_section_name = shear_xi_minus_binned
bandpower_ggl_section_name = bandpower_galaxy_shear
bandpower_e_cosmic_shear_section_name = bandpower_shear_e
cosebis_section_name = cosebis
simulate = F
simulate_with_noise = T
mock_filename = 

[combine_theoryvectors]
file = %(ADDITIONAL_MODULES_PATH)s/combine_theoryvectors.py
mode = datavector
input_section_name_1 = scale_cuts_output_1
input_section_name_2 = scale_cuts_output_2
input_section_name_uncut = scale_cuts_output_uncut
output_section_name = scale_cuts_output

[likelihood]
file = %(KCAP_PATH)s/utils/mini_like.py
input_section_name = scale_cuts_output
like_name = loglike

[distances]
file = %(MY_PATH)s/CosmoPowerCosmosis/cosmosis_modules/camb_distances.py
do_reionization = F
mode = transfer
nonlinear = pk
halofit_version = mead
neutrino_hierarchy = normal
kmax = 20.0
zmid = 2.0
nz_mid = 100
zmax = 6.0
nz = 150
background_zmax = 6.0
background_zmin = 0.0
background_nz = 6000

[cosmopower]
file = %(MY_PATH)s/CosmoPowerCosmosis/cosmosis_modules/cosmopower_interface.py
path_2_trained_emulator = %(MY_PATH)s/CosmoPowerCosmosis/
use_specific_k_modes = F
; otherwise it uses the k-modes the emulator is trained on
kmax = 10.0
kmin = 1e-5
nk = 200
